services:
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data

  api:
    build:
      context: ./python-api
      dockerfile: Dockerfile
    environment:
      - SESSION_SECRET=${SESSION_SECRET:-devsupersecret}
      - DB_PATH=/app/data/app.db
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - DB_URL=postgresql+psycopg2://app:app@db:5432/app
    volumes:
      - db_data:/app/data # kept for future local files
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    environment:
      - API_BASE_URL=http://api:8000
      - SESSION_SECRET=${SESSION_SECRET:-devsupersecret}
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  db_data:
  pg_data:
